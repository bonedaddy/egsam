# 3.3 Response bodies

Let's test mime types:
=> 3.3.ascii ▶️ charset=us-ascii, should see Pass
=> 3.3.utf8 ▶️ charset=utf-8, should see Pass
=> 3.3.utf16 ▶️ charset=utf-16, should see Pass or fail gracefully if utf-16 is not supported
=> 3.3.utf8.bad ▶️ charset=utf-8 but content is utf-16, should fail gracefully

=> 3.4.gmi Next - Response body handling
=> / Home

## Spec excerpt

Response bodies are just raw content, text or binary, ala gopher.  There is no support for compression, chunking or any other kind of content or transfer encoding.  The server closes the connection after the final byte, there is no "end of response" signal like gopher's lonely dot.

Response bodies only accompany responses whose header indicates a SUCCESS status (i.e. a status code whose first digit is 2).  For such responses, <META> is a MIME media type as defined in RFC 2046.

Internet media types are registered with a canonical form.  Content transferred via Gemini MUST be represented in the appropriate canonical form prior to its transmission except for "text" types, as defined in the next paragraph.

When in canonical form, media subtypes of the "text" type use CRLF as the text line break.  Gemini relaxes this requirement and allows the transport of text media with plain LF alone (but NOT a plain CR alone) representing a line break when it is done consistently for an entire response body.  Gemini clients MUST accept CRLF and bare LF as being representative of a line break in text media received via Gemini.

If a MIME type begins with "text/" and no charset is explicitly given, the charset should be assumed to be UTF-8.  Compliant clients MUST support UTF-8-encoded text/* responses.  Clients MAY optionally support other encodings.  Clients receiving a response in a charset they cannot decode SHOULD gracefully inform the user what happened instead of displaying garbage.

If <META> is an empty string, the MIME type MUST default to "text/gemini; charset=utf-8".  The text/gemini media type is defined in section 5.
